// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button> Global render should render 1`] = `
<Button
  nature="danger"
>
  <ButtonDanger>
    <Component
      colors={
        Object {
          "default": Object {
            "backgroundColor": Object {
              "active": "#4E000D",
              "hover": "#8B0018",
              "idle": "#FF002D",
            },
          },
        }
      }
    >
      <BaseButton
        theme={
          Object {
            "backgroundColor": Object {
              "active": "#4E000D",
              "hover": "#8B0018",
              "idle": "#FF002D",
            },
          }
        }
      >
        <styled.button
          theme={
            Object {
              "backgroundColor": Object {
                "active": "#4E000D",
                "hover": "#8B0018",
                "idle": "#FF002D",
              },
            }
          }
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "gHyVHS",
                  "rules": Array [
                    "
  ",
                    "
  color: ",
                    [Function],
                    ";
  font-size: 16px;
  line-height: 20px;
  background-color: ",
                    [Function],
                    ";
  cursor: pointer;
  border: ",
                    [Function],
                    ";
  border-radius: 4px;
  min-width: 60px;
  display: flex;
  flex-direction: column;
  position: relative;
  align-items: center;
  justify-content: center;
  outline: none;
  transition: all 0.1s;
  ",
                    [Function],
                    ";

  &:hover:not(:disabled),
  &:focus:not(:disabled) {
    border: ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
  }
  &:active:not(:disabled) {
    border: ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
  }
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    span {
      pointer-events: none;
    }
  }
",
                    "
  padding: 10px 16px;
  height: 40px;
",
                  ],
                },
                "displayName": "styled.button",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            theme={
              Object {
                "backgroundColor": Object {
                  "active": "#4E000D",
                  "hover": "#8B0018",
                  "idle": "#FF002D",
                },
              }
            }
          >
            <button
              className="sc-bxivhb gHyVHS"
            >
              <Styled(styled.span)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-EHOje",
                        "isStatic": false,
                        "lastClassName": "kdyCPA",
                        "rules": Array [
                          "
  font-family: inherit;
  font-weight: 600;
",
                          "
  display: flex;
  justify-content: center;
  align-items: center;
",
                        ],
                      },
                      "displayName": "Styled(styled.span)",
                      "foldedComponentIds": Array [
                        "sc-bwzfXH",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-EHOje",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="sc-bwzfXH sc-EHOje kdyCPA"
                  >
                    Default
                  </span>
                </StyledComponent>
              </Styled(styled.span)>
            </button>
          </StyledComponent>
        </styled.button>
      </BaseButton>
    </Component>
  </ButtonDanger>
</Button>
`;
